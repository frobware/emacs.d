#!/usr/bin/env bash

# A modified version of:
# https://unix.stackexchange.com/questions/650912/is-it-possible-to-parse-a-commands-arguments-automatically/650927#650927

: "${REAL_GIT:=/etc/profiles/per-user/aim/bin/git}"

if [[ -x /usr/bin/git ]]; then
    REAL_GIT=/usr/bin/git
fi

set -eu
set -o pipefail

: "${CACHE_DIR:=$HOME/.cache/git/repositories}"

cached_dir_for_url() {
    local url="$1"
    local without_proto="${url#*:\/\/}"
    local without_auth="${without_proto##*@}"
    [[ $without_auth =~ ^([^:\/]+)(:[[:digit:]]+\/|:|\/)?(.*) ]]
    local project_host="${BASH_REMATCH[1]}"
    local project_path="${BASH_REMATCH[3]}"
    echo "${CACHE_DIR}/${project_host}/${project_path}"
}

if [[ ! "${1:-}" == "clone" ]]; then
    exec "$REAL_GIT" "$@"
fi

caching=false

for argument in "${@:2}"; do
    if [[ "$argument" =~ ^https:// ]]; then
        local_repo_dir=$(cached_dir_for_url "$argument")
        [[ $local_repo_dir == *.git ]] || local_repo_dir="${local_repo_dir}.git"
        [[ -n "$local_repo_dir" && -d "$local_repo_dir" ]] && caching=true
    fi
done

for argument in "${@:2}"; do
    case $argument in
        --reference | --reference-if-able)
            caching=false
            break
            ;;
        --recursive)
            caching=false
            break
            ;;
    esac
done

if $caching; then
    echo "****INFO**** cloning from cache $local_repo_dir"
    echo "$REAL_GIT" clone --reference-if-able "$local_repo_dir" --dissociate "${@:2}"
    exec "$REAL_GIT" clone --reference-if-able "$local_repo_dir" --dissociate "${@:2}"
else
    exec "$REAL_GIT" "$@"
fi
