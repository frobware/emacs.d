#!/usr/bin/env bash

# A modified version of:
# https://unix.stackexchange.com/questions/650912/is-it-possible-to-parse-a-commands-arguments-automatically/650927#650927

set -eu
set -o pipefail

: "${CACHE_DIR:=$HOME/.cache/git/repositories}"

git_at_github_instead_of() {
    local url=$1
    local repo="$(basename "$url")"
    local baseurl="$(dirname "$url")"
    baseurl=${url/https:\/\//git@}
    basedir="$(dirname "${baseurl/\//:}")" # replace <name>/ with <name>:
    echo "$basedir/$repo"
}

cached_dir_for_url() {
    local url="$1"
    local repo="$(basename "$url")"
    local baseurl="$(dirname "$url")"
    baseurl=${url/https:\/\//git@}
    local basedir="$(dirname "${baseurl/\//:}")" # replace <name>/ with <name>:
    echo "${CACHE_DIR}/$basedir/$repo"
}

if [[ ! "${1:-}" == "clone" ]]; then
    exec /usr/bin/git "$@"
fi

caching=false

for argument in "${@:2}"; do
    if [[ "$argument" =~ ^https:// ]]; then
        local_repo_dir=$(cached_dir_for_url "$argument")
        [[ -n "$local_repo_dir" && -d "$local_repo_dir" ]] && caching=true
    fi
done

for argument in "${@:2}"; do
    case $argument in
        --reference | --reference-if-able)
            caching=false
            break
            ;;
        # *git@github.com:*)
        #     caching=true
        #     [[ $argument == *.git ]] && argument=${argument%.git}
        #     folder=$cache/$argument
        #     ;;
    esac
done

if $caching; then
    echo "****INFO**** cloning from cache $local_repo_dir"
    echo /usr/bin/git clone --reference-if-able "$local_repo_dir" --dissociate "${@:2}"
    exec /usr/bin/git clone --reference-if-able "$local_repo_dir" --dissociate "${@:2}"
else
    exec /usr/bin/git "$@"
fi
